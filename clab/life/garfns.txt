/*
void TwoDn(char *file,int gen,int rows,int columns)
	{
	FILE *in=fopen(file,"r");
	int i,j;	
	char a;
	int m=0;

	char **array=(char **)malloc(rows*sizeof(char*));
	for(i=0;i<=rows;i++)
		{
		array[i]=(char*)malloc(columns*sizeof(char));
		}
	for(m=0;m<gen;m++)
		{
		for(i=0;i<=rows;i++)
		{
		for(j=0;j<=columns;j++)
			{
			fscanf(in,"%c",&array[i][j]);
			printf("%c",array[i][j]);
			}
		}
printf("\n");
		}

}*/
void TwoDn1(char *file,int gen,int rows,int columns)
	{
	FILE *in=fopen(file,"r");
	int i,j;	
	char a;
	int m=0;
	printf("%d\n",rows);
	printf("%d\n",columns);
	char **array1=(char **)malloc(rows*sizeof(char*));
	for(i=0;i<(rows);i=i+1)
		{
		array1[i]=(char*)malloc(columns*sizeof(char));
		}
	for(i=0;i<(rows);i=i+1)
		{
		for(j=0;j<(columns);j=j+1)
			{
			fscanf(in,"%c\n",&array1[i][j]);
			if((array1[i][j]=='.'))
				{			
				printf(".");
				}
			else if((array1[i][j]!='.') && (array1[i][j]!=' '))
				{
				printf("x");
				}
			}
		printf("\n");	
		}
	fclose(in);
	}


/*FILE *in=fopen(file,"r");
	int i,j;	
	char a;
	int m=0;

	char **array=(char **)malloc(rows*sizeof(char*));
	for(i=0;i<=rows;i++)
		{
		array[i]=(char*)malloc(columns*sizeof(char));
		}
	for(m=0;m<gen;m++)
		{
		for(i=0;i<=rows;i++)
		{
		for(j=0;j<=columns;j++)
			{
			fscanf(in,"%c",&array[i][j]);
			printf("%c",array[i][j]);
			}
		}
printf("\n");
		}

}*/



/*int m,i,j,b;
for(m=0;m<genno;m++)
	{
	for(i=0;i<(rows);i=i+1)
	{
	for(j=0;j<(columns);j=j+1)
		{
		b=NeighbourCount(array1,i,j,rows,columns);
		array[i][j]=b;
				
		}
	
	}

		
	printf("Generation : %d\n",m+1);
	LiveCount(array,array1,rows,columns);
	}*/
